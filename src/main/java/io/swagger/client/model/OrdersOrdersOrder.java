/*
 * Tradier API
 * Tradier API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * OrdersOrdersOrder
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-31T14:29:22.511420325Z[GMT]")

public class OrdersOrdersOrder {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("side")
  private String side = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("duration")
  private String duration = null;

  @SerializedName("avg_fill_price")
  private BigDecimal avgFillPrice = null;

  @SerializedName("exec_quantity")
  private BigDecimal execQuantity = null;

  @SerializedName("last_fill_price")
  private BigDecimal lastFillPrice = null;

  @SerializedName("last_fill_quantity")
  private BigDecimal lastFillQuantity = null;

  @SerializedName("remaining_quantity")
  private BigDecimal remainingQuantity = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("transaction_date")
  private OffsetDateTime transactionDate = null;

  @SerializedName("class")
  private String propertyClass = null;

  @SerializedName("tag")
  private String tag = null;

  public OrdersOrdersOrder id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OrdersOrdersOrder type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public OrdersOrdersOrder symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public OrdersOrdersOrder side(String side) {
    this.side = side;
    return this;
  }

   /**
   * Get side
   * @return side
  **/
  @Schema(description = "")
  public String getSide() {
    return side;
  }

  public void setSide(String side) {
    this.side = side;
  }

  public OrdersOrdersOrder quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @Schema(description = "")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public OrdersOrdersOrder status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OrdersOrdersOrder duration(String duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }

  public OrdersOrdersOrder avgFillPrice(BigDecimal avgFillPrice) {
    this.avgFillPrice = avgFillPrice;
    return this;
  }

   /**
   * Get avgFillPrice
   * @return avgFillPrice
  **/
  @Schema(description = "")
  public BigDecimal getAvgFillPrice() {
    return avgFillPrice;
  }

  public void setAvgFillPrice(BigDecimal avgFillPrice) {
    this.avgFillPrice = avgFillPrice;
  }

  public OrdersOrdersOrder execQuantity(BigDecimal execQuantity) {
    this.execQuantity = execQuantity;
    return this;
  }

   /**
   * Get execQuantity
   * @return execQuantity
  **/
  @Schema(description = "")
  public BigDecimal getExecQuantity() {
    return execQuantity;
  }

  public void setExecQuantity(BigDecimal execQuantity) {
    this.execQuantity = execQuantity;
  }

  public OrdersOrdersOrder lastFillPrice(BigDecimal lastFillPrice) {
    this.lastFillPrice = lastFillPrice;
    return this;
  }

   /**
   * Get lastFillPrice
   * @return lastFillPrice
  **/
  @Schema(description = "")
  public BigDecimal getLastFillPrice() {
    return lastFillPrice;
  }

  public void setLastFillPrice(BigDecimal lastFillPrice) {
    this.lastFillPrice = lastFillPrice;
  }

  public OrdersOrdersOrder lastFillQuantity(BigDecimal lastFillQuantity) {
    this.lastFillQuantity = lastFillQuantity;
    return this;
  }

   /**
   * Get lastFillQuantity
   * @return lastFillQuantity
  **/
  @Schema(description = "")
  public BigDecimal getLastFillQuantity() {
    return lastFillQuantity;
  }

  public void setLastFillQuantity(BigDecimal lastFillQuantity) {
    this.lastFillQuantity = lastFillQuantity;
  }

  public OrdersOrdersOrder remainingQuantity(BigDecimal remainingQuantity) {
    this.remainingQuantity = remainingQuantity;
    return this;
  }

   /**
   * Get remainingQuantity
   * @return remainingQuantity
  **/
  @Schema(description = "")
  public BigDecimal getRemainingQuantity() {
    return remainingQuantity;
  }

  public void setRemainingQuantity(BigDecimal remainingQuantity) {
    this.remainingQuantity = remainingQuantity;
  }

  public OrdersOrdersOrder createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public OrdersOrdersOrder transactionDate(OffsetDateTime transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Get transactionDate
   * @return transactionDate
  **/
  @Schema(description = "")
  public OffsetDateTime getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(OffsetDateTime transactionDate) {
    this.transactionDate = transactionDate;
  }

  public OrdersOrdersOrder propertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
    return this;
  }

   /**
   * Get propertyClass
   * @return propertyClass
  **/
  @Schema(description = "")
  public String getPropertyClass() {
    return propertyClass;
  }

  public void setPropertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
  }

  public OrdersOrdersOrder tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrdersOrdersOrder ordersOrdersOrder = (OrdersOrdersOrder) o;
    return Objects.equals(this.id, ordersOrdersOrder.id) &&
        Objects.equals(this.type, ordersOrdersOrder.type) &&
        Objects.equals(this.symbol, ordersOrdersOrder.symbol) &&
        Objects.equals(this.side, ordersOrdersOrder.side) &&
        Objects.equals(this.quantity, ordersOrdersOrder.quantity) &&
        Objects.equals(this.status, ordersOrdersOrder.status) &&
        Objects.equals(this.duration, ordersOrdersOrder.duration) &&
        Objects.equals(this.avgFillPrice, ordersOrdersOrder.avgFillPrice) &&
        Objects.equals(this.execQuantity, ordersOrdersOrder.execQuantity) &&
        Objects.equals(this.lastFillPrice, ordersOrdersOrder.lastFillPrice) &&
        Objects.equals(this.lastFillQuantity, ordersOrdersOrder.lastFillQuantity) &&
        Objects.equals(this.remainingQuantity, ordersOrdersOrder.remainingQuantity) &&
        Objects.equals(this.createDate, ordersOrdersOrder.createDate) &&
        Objects.equals(this.transactionDate, ordersOrdersOrder.transactionDate) &&
        Objects.equals(this.propertyClass, ordersOrdersOrder.propertyClass) &&
        Objects.equals(this.tag, ordersOrdersOrder.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, symbol, side, quantity, status, duration, avgFillPrice, execQuantity, lastFillPrice, lastFillQuantity, remainingQuantity, createDate, transactionDate, propertyClass, tag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersOrdersOrder {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    side: ").append(toIndentedString(side)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    avgFillPrice: ").append(toIndentedString(avgFillPrice)).append("\n");
    sb.append("    execQuantity: ").append(toIndentedString(execQuantity)).append("\n");
    sb.append("    lastFillPrice: ").append(toIndentedString(lastFillPrice)).append("\n");
    sb.append("    lastFillQuantity: ").append(toIndentedString(lastFillQuantity)).append("\n");
    sb.append("    remainingQuantity: ").append(toIndentedString(remainingQuantity)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
