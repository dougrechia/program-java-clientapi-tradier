/*
 * Tradier API
 * Tradier API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * PositionsPositionsPosition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-31T14:29:22.511420325Z[GMT]")

public class PositionsPositionsPosition {
  @SerializedName("cost_basis")
  private BigDecimal costBasis = null;

  @SerializedName("date_acquired")
  private OffsetDateTime dateAcquired = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("symbol")
  private String symbol = null;

  public PositionsPositionsPosition costBasis(BigDecimal costBasis) {
    this.costBasis = costBasis;
    return this;
  }

   /**
   * Get costBasis
   * @return costBasis
  **/
  @Schema(description = "")
  public BigDecimal getCostBasis() {
    return costBasis;
  }

  public void setCostBasis(BigDecimal costBasis) {
    this.costBasis = costBasis;
  }

  public PositionsPositionsPosition dateAcquired(OffsetDateTime dateAcquired) {
    this.dateAcquired = dateAcquired;
    return this;
  }

   /**
   * Get dateAcquired
   * @return dateAcquired
  **/
  @Schema(description = "")
  public OffsetDateTime getDateAcquired() {
    return dateAcquired;
  }

  public void setDateAcquired(OffsetDateTime dateAcquired) {
    this.dateAcquired = dateAcquired;
  }

  public PositionsPositionsPosition id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PositionsPositionsPosition quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @Schema(description = "")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public PositionsPositionsPosition symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PositionsPositionsPosition positionsPositionsPosition = (PositionsPositionsPosition) o;
    return Objects.equals(this.costBasis, positionsPositionsPosition.costBasis) &&
        Objects.equals(this.dateAcquired, positionsPositionsPosition.dateAcquired) &&
        Objects.equals(this.id, positionsPositionsPosition.id) &&
        Objects.equals(this.quantity, positionsPositionsPosition.quantity) &&
        Objects.equals(this.symbol, positionsPositionsPosition.symbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(costBasis, dateAcquired, id, quantity, symbol);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PositionsPositionsPosition {\n");
    
    sb.append("    costBasis: ").append(toIndentedString(costBasis)).append("\n");
    sb.append("    dateAcquired: ").append(toIndentedString(dateAcquired)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
